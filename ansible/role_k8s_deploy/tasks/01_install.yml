---
- name: Check k8s and CRI-O installed
  shell: dpkg -s kubelet
  register: rc_k8s
  ignore_errors: true  

- name: Install k8s and CRIO on master and workers
  block:
  - name: Prepare for install 1
    blockinfile:
      path: /etc/modules-load.d/k8s.conf
      block: |
        overlay
        br_netfilter
      create: true

  - name: Prepare for install 2
    shell: |
      modprobe overlay
      modprobe br_netfilter

  - name: Prepare for install 3
    blockinfile:
      path: /etc/sysctl.d/k8s.conf
      block: |
        net.bridge.bridge-nf-call-iptables  = 1
        net.bridge.bridge-nf-call-ip6tables = 1
        net.ipv4.ip_forward                 = 1
      create: true

  - name: Prepare for install 4
    shell: sudo sysctl --system  

  - name: Install dependencies for adding the repositories
    shell: |
      apt-get update
      apt-get install -y software-properties-common curl

  - name: Add repository k8s
    shell: |
      mkdir -p /etc/apt/keyrings
      curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /" | tee /etc/apt/sources.list.d/kubernetes.list

  - name: Add repository CRIO
    shell: |
      curl -fsSL https://pkgs.k8s.io/addons:/cri-o:/prerelease:/main/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/cri-o-apt-keyring.gpg
      echo "deb [signed-by=/etc/apt/keyrings/cri-o-apt-keyring.gpg] https://pkgs.k8s.io/addons:/cri-o:/prerelease:/main/deb/ /" | tee /etc/apt/sources.list.d/cri-o.list

  - name: Install k8s and CRIO
    shell: |
      apt-get update
      apt-get install -y cri-o kubelet kubeadm kubectl

  - name: Start CRI-O
    shell: systemctl start crio
  when: rc_k8s.rc != 0
#- name: Check CRIO installed
#  shell: dpkg -s cri-o
#  register: rc_crio
#  ignore_errors: true
#
#- name: Prepare and install CRIO
#  block:
#  - name: Prepare for install CRIO_1
#    blockinfile:
#      path: /etc/modules-load.d/k8s.conf
#      block: |
#        overlay
#        br_netfilter
#      create: true
#
#  - name: Prepare for install CRIO_2
#    shell: |
#      modprobe overlay
#      modprobe br_netfilter
#
#  - name: Prepare for install CRIO_3
#    blockinfile:
#      path: /etc/sysctl.d/k8s.conf
#      block: |
#        net.bridge.bridge-nf-call-iptables  = 1
#        net.bridge.bridge-nf-call-ip6tables = 1
#        net.ipv4.ip_forward                 = 1
#      create: true
#
#  - name: Prepare for install CRIO_4
#    shell: sudo sysctl --system
#
#  - name: Add CRIO repository
#    shell: |
#      echo "deb [signed-by=/usr/share/keyrings/libcontainers-archive-keyring.gpg] https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/{{ OS }}/ /" | sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list
#      echo "deb [signed-by=/usr/share/keyrings/libcontainers-crio-archive-keyring.gpg] https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/{{ CRIO_version }}/{{ OS }}/ /" | sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable:cri-o:{{ CRIO_version }}.list
#
#  - name: Import GPG key for CRIO
#    shell: |
#      rm -f /usr/share/keyrings/libcontainers-archive-keyring.gpg /usr/share/keyrings/libcontainers-crio-archive-keyring.gpg
#      mkdir -p /usr/share/keyrings
#      curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/{{ OS }}/Release.key | sudo gpg --dearmor -o /usr/share/keyrings/libcontainers-archive-keyring.gpg
#      curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/{{ CRIO_version }}/{{ OS }}/Release.key | sudo gpg --dearmor -o /usr/share/keyrings/libcontainers-crio-archive-keyring.gpg
#
#  - name: Install CRIO
#    shell: |
#      apt-get update
#      apt-get install -y cri-o cri-o-runc
#      systemctl daemon-reload
#      systemctl enable crio
#      systemctl start crio
#    ignore_errors: true
#  when: rc_crio.rc != 0
#
#- name: Check k8s installed
#  shell: dpkg -s kubelet
#  register: rc_k8s
#  ignore_errors: true  
#
#- name: Install k8s
#  block:
#  - name: Install packages needed to use k8s repository
#    shell: apt-get install -y apt-transport-https ca-certificates
#
#  - name: Get key gpg k8s and add one in system
#    shell: |
#      rm -f /etc/apt/keyrings/kubernetes-apt-keyring.gpg
#      mkdir -p /etc/apt/keyrings
#      curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
#    #rm - so that it's not prompt to overwrite after gpg --dearmor... if file already exists
#
#  - name: Add repository k8s
#    shell: echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
#
#  - name: Install k8s and pin their version
#    shell: |
#      apt-get update && apt-get install -y kubelet kubeadm kubectl
#      systemctl enable kubelet
#      systemctl start kubelet
#  when: rc_k8s.rc != 0